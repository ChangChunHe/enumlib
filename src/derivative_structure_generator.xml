<?xml version="1.0" encoding="UTF-8"?>
<fortpy mode="docstring">
  <decorates name="derivative_structure_generator.get_list_at_this_size">
    <group name="stuct_enum_tests" purpose="testingf_not_used" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_list_at_this_size_cList.out.{}" template="integer.xml"
		identifier="get_list_at_this_size.out" />
	<target name="cList" compareto="get_list_at_this_size.out"
		varfile="get_list_at_this_size.out" when="each"/>
      </test>
      <global name="cList" type="integer" modifiers="pointer" dimensions=":,:"/>
      <assignment name="vol" value="volfile">
	<value identifier="volfile" file="get_list_at_this_size_vol.in.{}"
	       folder="../tests/derivative_structure_generator" rename="vol.in"/>
      </assignment>
      <assignment name="nD" value="nDfile">
	<value identifier="nDfile" file="get_list_at_this_size_nD.in.{}"
	       folder="../tests/derivative_structure_generator" rename="nD.in"/>
      </assignment>
      <assignment name="concTable" value="concTablefile" allocatable="true">
	<value identifier="concTablefile" file="get_list_at_this_size_concTable.in.{}"
	       folder="../tests/derivative_structure_generator" rename="concTable.in"/>
      </assignment>
      <assignment name="eps" value="epsfile" >
	<value identifier="epsfile" file="get_list_at_this_size_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_concentration_list">
    <group name="stuct_enum_tests" purpose="testingf_not_used" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_concentration_list_cList.out.{}" template="integer.xml"
		identifier="get_consentration_list.out" />
	<target name="cList" compareto="get_consentration_list.out"
		varfile="get_concentration_list.out" when="each"/>
      </test>
      <global name="cList" type="integer" modifiers="pointer" dimensions=":,:"/>
      <assignment name="volTable" value="volfile">
	<value identifier="volfile" file="get_concentration_list_volTable.in.{}"
	       folder="../tests/derivative_structure_generator" rename="volTable.in"/>
      </assignment>
      <assignment name="concTable" value="concTablefile" allocatable="true">
	<value identifier="concTablefile" file="get_list_at_this_size_concTable.in.{}"
	       folder="../tests/derivative_structure_generator" rename="concTable.in"/>
      </assignment>
      <assignment name="eps" value="epsfile" >
	<value identifier="epsfile" file="get_list_at_this_size_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.mixed_radix_counter">
    <group name="stuct_enum_tests" purpose="testingf_not_used" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file=".{}" template="" identifier=".out" />
	<target name="" compareto=".out"
		varfile=".out" when="each"/>
      </test>
      <assignment name="labels" value="labelsfile" allocate="true">
	<value identifier="labelsfile" file="mixed_radix_couter_labels.in.{}"
	       folder="../tests/derivative_structure_generator" rename="labels.in"/>
      </assignment>
      <assignment name="digit" value="digitfile" allocatable="true">
	<value identifier="digitfile" file="mixed_radix_counter_digit.in.{}"
	       folder="../tests/derivative_structure_generator" rename="digit.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.do_rotperms_form_groups">
    <group name="stuct_enum_tests" purpose="testingf_not_used" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="do_rotperms_form_groups.out.{}" template=""
		identifier="do_rotperms_form_groups.out" />
	<target name="[default]" compareto="do_rotperms_form_groups.out"
		varfile="do_rotperms_form_groups.out" when="each"/>
      </test>
      <assignment name="rpl" value="rplfile" allocate="true">
	<value identifier="rplfile" file="do_rotperms_form_groups_rpl.in.{}"
	       folder="../tests/derivative_structure_generator" rename="rpl.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.organize_rotperm_lists">
    <group name="stuct_enum_tests" purpose="testing_fortpy_bug" staging="../unittests/">
      <test identifier="rdRPList" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="organize_rotperm_lists_rdRPList.out.{}" template=""
		identifier="organize_rotperm_lists_rdRPList.out" />
	<target name="rdRPList" compareto="organize_rotperm_lists_rdRPList.out"
		varfile="organize_rotperm_lists_rdRPList.out" when="each"/>
      </test>
      <assignment name="RPList" value="RPListfile" allocate="true">
	<value identifier="RPListfile" file="organize_rotperm_lists_RPList.in.{}"
	       folder="../tests/derivative_structure_generator" rename="RPList.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.organize_rotperm_lists">
    <group name="stuct_enum_tests" purpose="testing_fortpy_bug" staging="../unittests/">
      <test identifier="RPLindx" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="organize_rotperm_lists_RPLindx.out.{}" template=""
		identifier="organize_rotperm_lists_RPLindx.out" />
	<target name="RPLindx" compareto="organize_rotperm_lists_RPLindx.out"
		varfile="organize_rotperm_lists_RPLindx.out" when="each"/>
      </test>
      <assignment name="RPList" value="RPListfile" allocate="true">
	<value identifier="RPListfile" file="organize_rotperm_lists_RPList.in.{}"
	       folder="../tests/derivative_structure_generator" rename="RPList.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_dvector_permutations">
    <group name="stuct_enum_tests" purpose="testingf" staging="../unittests/">
      <test identifier="RPList_perm"
	    description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_dvector_permutations_dRPList_perm.out.{}" template=""
		identifier="get_dvector_permutations_dRPList_perm.out" />
	<target name="dRPList" member="perm"
		compareto="get_dvector_permutations_dRPList_perm.out"
		varfile="get_dvector_permutations_dRPList_perm.out" when="each"/>
      </test>
      <global name="pd" type="real(dp)" modifiers="pointer" dimensions=":,:"/>
      <assignment name="pLV" value="pLVfile" allocate="true">
	<value identifier="pLVfile" file="get_dvector_permutations_pLV.in.{}"
	       folder="../tests/derivative_structure_generator" rename="pLV.in"/>
      </assignment>
      <assignment name="pd" value="pdfile" allocate="true">
	<value identifier="pdfile" file="get_dvector_permutations_pd.in.{}"
	       folder="../tests/derivative_structure_generator" rename="pd.in"/>
      </assignment>
      <assignment name="LatDim" value="LatDimfile">
	<value identifier="LatDimfile" file="get_dvector_permutations_LatDim.in.{}"
	       folder="../tests/derivative_structure_generator" rename="LatDim.in"/>
      </assignment>
      <assignment name="eps" value="epsfile" >
	<value identifier="epsfile" file="get_dvector_permutations_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_dvector_permutations">
    <group name="stuct_enum_tests" purpose="testing_rank3_array" staging="../unittests/">
      <test identifier="RPList_RotIndx"
	    description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_dvector_permutations_dRPList_RotIndx.out.{}" template=""
		identifier="get_dvector_permutations_dRPList_RotIndx.out" />
	<target name="dRPList" member="RotIndx"
		compareto="get_dvector_permutations_dRPList_RotIndx.out"
		varfile="get_dvector_permutations_dRPList_RotIndx.out" when="each"/>
      </test>
      <global name="pd" type="real(dp)" modifiers="pointer" dimensions=":,:"/>
      <assignment name="pLV" value="pLVfile" allocate="true">
	<value identifier="pLVfile" file="get_dvector_permutations_pLV.in.{}"
	       folder="../tests/derivative_structure_generator" rename="pLV.in"/>
      </assignment>
      <assignment name="pd" value="pdfile" allocate="true">
	<value identifier="pdfile" file="get_dvector_permutations_pd.in.{}"
	       folder="../tests/derivative_structure_generator" rename="pd.in"/>
      </assignment>
      <assignment name="LatDim" value="LatDimfile">
	<value identifier="LatDimfile" file="get_dvector_permutations_LatDim.in.{}"
	       folder="../tests/derivative_structure_generator" rename="LatDim.in"/>
      </assignment>
      <assignment name="eps" value="epsfile" >
	<value identifier="epsfile" file="get_dvector_permutations_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_dvector_permutations">
    <group name="stuct_enum_tests" purpose="testing_rank3_array" staging="../unittests/">
      <test identifier="RPList_nL" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_dvector_permutations_dRPList_nL.out.{}" template=""
		identifier="get_dvector_permutations_dRPList_nL.out" />
	<target name="dRPList" member="nL"
		compareto="get_dvector_permutations_dRPList_nL.out"
		varfile="get_dvector_permutations_dRPList_nL.out" when="each"/>
      </test>
      <global name="pd" type="real(dp)" modifiers="pointer" dimensions=":,:"/>
      <assignment name="pLV" value="pLVfile" allocate="true">
	<value identifier="pLVfile" file="get_dvector_permutations_pLV.in.{}"
	       folder="../tests/derivative_structure_generator" rename="pLV.in"/>
      </assignment>
      <assignment name="pd" value="pdfile" allocate="true">
	<value identifier="pdfile" file="get_dvector_permutations_pd.in.{}"
	       folder="../tests/derivative_structure_generator" rename="pd.in"/>
      </assignment>
      <assignment name="LatDim" value="LatDimfile">
	<value identifier="LatDimfile" file="get_dvector_permutations_LatDim.in.{}"
	       folder="../tests/derivative_structure_generator" rename="LatDim.in"/>
      </assignment>
      <assignment name="eps" value="epsfile" >
	<value identifier="epsfile" file="get_dvector_permutations_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_dvector_permutations">
    <group name="stuct_enum_tests" purpose="testing_rank3_array" staging="../unittests/">
      <test identifier="RPList_v" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_dvector_permutations_dRPList_v.out.{}" template=""
		identifier="get_dvector_permutations_dRPList_v.out" />
	<target name="dRPList" member="v"
		compareto="get_dvector_permutations_dRPList_v.out"
		varfile="get_dvector_permutations_dRPList_v.out" when="each"/>
      </test>
      <global name="pd" type="real(dp)" modifiers="pointer" dimensions=":,:"/>
      <assignment name="pLV" value="pLVfile" allocate="true">
	<value identifier="pLVfile" file="get_dvector_permutations_pLV.in.{}"
	       folder="../tests/derivative_structure_generator" rename="pLV.in"/>
      </assignment>
      <assignment name="pd" value="pdfile" allocate="true">
	<value identifier="pdfile" file="get_dvector_permutations_pd.in.{}"
	       folder="../tests/derivative_structure_generator" rename="pd.in"/>
      </assignment>
      <assignment name="LatDim" value="LatDimfile">
	<value identifier="LatDimfile" file="get_dvector_permutations_LatDim.in.{}"
	       folder="../tests/derivative_structure_generator" rename="LatDim.in"/>
      </assignment>
      <assignment name="eps" value="epsfile" >
	<value identifier="epsfile" file="get_dvector_permutations_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_rotation_perms_lists">
    <group name="stuct_enum_tests" purpose="testing_rank3_and_user_type" staging="../unittests/">
      <test identifier="RPList_perm"
	    description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_rotation_perms_lists_RPlist_perm.out.{}" template=""
		identifier="get_rotation_perms_lists_RPlist_perm.out" />
	<target name="RPList" member="perm"
		compareto="get_rotation_perms_lists_RPlist_perm.out"
		varfile="get_rotation_perms_lists_RPlist_perm.out" when="each"/>
      </test>
      <assignment name="A" value="Afile" allocate="true">
	<value identifier="Afile" file="get_rotation_perms_lists_A.in.{}"
	       folder="../tests/derivative_structure_generator" rename="A.in"/>
      </assignment>
      <assignment name="HNF" value="HNFfile" allocate="true">
	<value identifier="HNFfile" file="get_rotation_perms_lists_HNF.in.{}"
	       folder="../tests/derivative_structure_generator" rename="HNF.in"/>
      </assignment>
      <assignment name="L" value="Lfile" allocate="true">
	<value identifier="Lfile" file="get_rotation_perms_lists_L.in.{}"
	       folder="../tests/derivative_structure_generator" rename="L.in"/>
      </assignment>
      <assignment name="SNF" value="SNFfile" allocate="true">
	<value identifier="SNFfile" file="get_rotation_perms_lists_SNF.in.{}"
	       folder="../tests/derivative_structure_generator" rename="SNF.in"/>
      </assignment>
      <assignment name="Op" value="Opfile" allocate="true">
	<value identifier="Opfile" file="get_rotation_perms_lists_Op.in.{}"
	       folder="../tests/derivative_structure_generator" rename="Op.in"/>
      </assignment>
      <assignment name="dperms" value="dpermsfile" allocate="true">
	<value identifier="dpermsfile" file="get_rotation_perms_lists_dperms.in.{}"
	       folder="../tests/derivative_structure_generator" rename="dperms.in"/>
      </assignment>
      <assignment name="eps" value="epsfile" >
	<value identifier="epsfile" file="get_rotation_perms_lists_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_rotation_perms_lists">
    <group name="stuct_enum_tests" purpose="testing_rank3_and_user_type" staging="../unittests/">
      <test identifier="RPList_RotIndx"
	    description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_rotation_perms_lists_RPlist_RotIndx.out.{}" template=""
		identifier="get_rotation_perms_lists_RPlist_RotIndx.out" />
	<target name="RPList" member="RotIndx"
		compareto="get_rotation_perms_lists_RPlist_RotIndx.out"
		varfile="get_rotation_perms_lists_RPlist_RotIndx.out" when="each"/>
      </test>
      <assignment name="A" value="Afile" allocate="true">
	<value identifier="Afile" file="get_rotation_perms_lists_A.in.{}"
	       folder="../tests/derivative_structure_generator" rename="A.in"/>
      </assignment>
      <assignment name="HNF" value="HNFfile" allocate="true">
	<value identifier="HNFfile" file="get_rotation_perms_lists_HNF.in.{}"
	       folder="../tests/derivative_structure_generator" rename="HNF.in"/>
      </assignment>
      <assignment name="L" value="Lfile" allocate="true">
	<value identifier="Lfile" file="get_rotation_perms_lists_L.in.{}"
	       folder="../tests/derivative_structure_generator" rename="L.in"/>
      </assignment>
      <assignment name="SNF" value="SNFfile" allocate="true">
	<value identifier="SNFfile" file="get_rotation_perms_lists_SNF.in.{}"
	       folder="../tests/derivative_structure_generator" rename="SNF.in"/>
      </assignment>
      <assignment name="Op" value="Opfile" allocate="true">
	<value identifier="Opfile" file="get_rotation_perms_lists_Op.in.{}"
	       folder="../tests/derivative_structure_generator" rename="Op.in"/>
      </assignment>
      <assignment name="dperms" value="dpermsfile" allocate="true">
	<value identifier="dpermsfile" file="get_rotation_perms_lists_dperms.in.{}"
	       folder="../tests/derivative_structure_generator" rename="dperms.in"/>
      </assignment>
      <assignment name="eps" value="epsfile" >
	<value identifier="epsfile" file="get_rotation_perms_lists_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_rotation_perms_lists">
    <group name="stuct_enum_tests" purpose="testing_rank3_and_user_type" staging="../unittests/">
      <test identifier="RPList_nL"
	    description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_rotation_perms_lists_RPlist_nL.out.{}" template=""
		identifier="get_rotation_perms_lists_RPlist_nL.out" />
	<target name="RPList" member="nL"
		compareto="get_rotation_perms_lists_RPlist_nL.out"
		varfile="get_rotation_perms_lists_RPlist_nL.out" when="each"/>
      </test>
      <assignment name="A" value="Afile" allocate="true">
	<value identifier="Afile" file="get_rotation_perms_lists_A.in.{}"
	       folder="../tests/derivative_structure_generator" rename="A.in"/>
      </assignment>
      <assignment name="HNF" value="HNFfile" allocate="true">
	<value identifier="HNFfile" file="get_rotation_perms_lists_HNF.in.{}"
	       folder="../tests/derivative_structure_generator" rename="HNF.in"/>
      </assignment>
      <assignment name="L" value="Lfile" allocate="true">
	<value identifier="Lfile" file="get_rotation_perms_lists_L.in.{}"
	       folder="../tests/derivative_structure_generator" rename="L.in"/>
      </assignment>
      <assignment name="SNF" value="SNFfile" allocate="true">
	<value identifier="SNFfile" file="get_rotation_perms_lists_SNF.in.{}"
	       folder="../tests/derivative_structure_generator" rename="SNF.in"/>
      </assignment>
      <assignment name="Op" value="Opfile" allocate="true">
	<value identifier="Opfile" file="get_rotation_perms_lists_Op.in.{}"
	       folder="../tests/derivative_structure_generator" rename="Op.in"/>
      </assignment>
      <assignment name="dperms" value="dpermsfile" allocate="true">
	<value identifier="dpermsfile" file="get_rotation_perms_lists_dperms.in.{}"
	       folder="../tests/derivative_structure_generator" rename="dperms.in"/>
      </assignment>
      <assignment name="eps" value="epsfile" >
	<value identifier="epsfile" file="get_rotation_perms_lists_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_rotation_perms_lists">
    <group name="stuct_enum_tests" purpose="testing_rank3_and_user_type" staging="../unittests/">
      <test identifier="RPList_v"
	    description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_rotation_perms_lists_RPlist_v.out.{}" template=""
		identifier="get_rotation_perms_lists_RPlist_v.out" />
	<target name="RPList" member="v"
		compareto="get_rotation_perms_lists_RPlist_v.out"
		varfile="get_rotation_perms_lists_RPlist_v.out" when="each"/>
      </test>
      <assignment name="A" value="Afile" allocate="true">
	<value identifier="Afile" file="get_rotation_perms_lists_A.in.{}"
	       folder="../tests/derivative_structure_generator" rename="A.in"/>
      </assignment>
      <assignment name="HNF" value="HNFfile" allocate="true">
	<value identifier="HNFfile" file="get_rotation_perms_lists_HNF.in.{}"
	       folder="../tests/derivative_structure_generator" rename="HNF.in"/>
      </assignment>
      <assignment name="L" value="Lfile" allocate="true">
	<value identifier="Lfile" file="get_rotation_perms_lists_L.in.{}"
	       folder="../tests/derivative_structure_generator" rename="L.in"/>
      </assignment>
      <assignment name="SNF" value="SNFfile" allocate="true">
	<value identifier="SNFfile" file="get_rotation_perms_lists_SNF.in.{}"
	       folder="../tests/derivative_structure_generator" rename="SNF.in"/>
      </assignment>
      <assignment name="Op" value="Opfile" allocate="true">
	<value identifier="Opfile" file="get_rotation_perms_lists_Op.in.{}"
	       folder="../tests/derivative_structure_generator" rename="Op.in"/>
      </assignment>
      <assignment name="dperms" value="dpermsfile" allocate="true">
	<value identifier="dpermsfile" file="get_rotation_perms_lists_dperms.in.{}"
	       folder="../tests/derivative_structure_generator" rename="dperms.in"/>
      </assignment>
      <assignment name="eps" value="epsfile" >
	<value identifier="epsfile" file="get_rotation_perms_lists_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.find_permutation_of_group">
    <group name="stuct_enum_tests" purpose="testing_fortpy_bug" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[1-634]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="find_permutation_of_group_perm.out.{}" template="integer.xml"
		identifier="find_permutation_of_group_perm.out" />
	<target name="perm" compareto="find_permutation_of_group_perm.out"
		varfile="find_permutation_of_group_perm.out" when="each"/>
      </test>
      <assignment name="g" value="gfile" allocate="true">
	<value identifier="gfile" file="find_permutation_of_group_g.in.{}"
	       folder="../tests/derivative_structure_generator" rename="g.in"/>
      </assignment>
      <assignment name="gp" value="gpfile" allocate="true">
	<value identifier="gpfile" file="find_permutation_of_group_gp.in.{}"
	       folder="../tests/derivative_structure_generator" rename="gp.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.map_dvector_permutation">
    <group name="stuct_enum_tests" purpose="testing_fortpy_bug" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[1-119]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="map_dvector_permutation_RP.out.{}" template="integer.xml"
		identifier="map_dvector_permutation_RP.out" />
	<target name="RP" compareto="map_dvector_permutation_RP.out"
		varfile="map_dvector_permutation_RP.out" when="each"/>
      </test>
      <assignment name="rd" value="rdfile" allocate="true">
	<value identifier="rdfile" file="map_dvector_permutation_rd.in.{}"
	       folder="../tests/derivative_structure_generator" rename="rd.in"/>
      </assignment>
      <assignment name="d" value="dfile" allocate="true">
	<value identifier="dfile" file="map_dvector_permutation_d.in.{}"
	       folder="../tests/derivative_structure_generator" rename="d.in"/>
      </assignment>
      <assignment name="eps" value="epsfile" >
	<value identifier="epsfile" file="map_dvector_permutation_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_HNF_diagonals">
    <group name="stuct_enum_tests" purpose="testing" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[1-100]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_HNF_diagonals_diagonals.out.{}" template="integer.xml"
		identifier="get_HNF_diagonals.out" />
	<target name="diagonals" compareto="get_HNF_diagonals.out"
		varfile="get_HNF_diagonals.out" when="each"/>
      </test>
      <global name="diagonals" type="integer" modifiers="pointer" dimensions=":,:"/>
      <assignment name="detS" value="detSfile">
	<value identifier="detSfile" file="get_HNF_diagonals_detS.in.{}"
	       folder="../tests/derivative_structure_generator" rename="detS.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_all_HNFs">
    <group name="stuct_enum_tests" purpose="testing_rank3_array" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_all_HNFs_hnf.out.{}" template="integer.xml"
		identifier="get_all_HNFs.out" />
	<target name="hnf" compareto="get_all_HNFs.out"
		varfile="get_all_HNFs.out" when="each"/>
      </test>
      <global name="hnf" type="integer" modifiers="pointer" dimensions=":,:,:"/>
      <assignment name="volume" value="volumefile">
	<value identifier="volumefile" file="get_all_HNFs_volume.in.{}"
	       folder="../tests/derivative_structure_generator" rename="volume.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_SNF">
    <group name="stuct_enum_tests" purpose="testing_rank3_array" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_SNF_SNF.out.{}" template="integer.xml"
		identifier="get_SNF.out" />
	<target name="SNF" compareto="get_SNF.out"
		varfile="get_SNF.out" when="each"/>
      </test>
      <global name="HNF" type="integer" modifiers="pointer" dimensions=":,:,:"/>
      <global name="SNF_label" type="integer" modifiers="pointer" dimensions=":"/>
      <global name="A" type="integer" modifiers="pointer" dimensions=":,:,:"/>
      <global name="SNF" type="integer" modifiers="pointer" dimensions=":,:,:"/>
      <global name="B" type="integer" modifiers="pointer" dimensions=":,:,:"/>
      <global name="F" type="integer" modifiers="pointer" dimensions=":,:,:"/>
      <assignment name="HNF" value="HNFfile" allocate="true">
	<value identifier="HNFfile" file="get_SNF_HNF.in.{}"
	       folder="../tests/derivative_structure_generator" rename="HNF.in"/>
      </assignment>
      <assignment name="fixing_op" value="fixing_opfile" allocate="true">
	<value identifier="fixing_opfile" file="get_SNF_fixing_op.in.{}"
	       folder="../tests/derivative_structure_generator" rename="fixing_op.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.remove_duplicate_lattices">
    <group name="stuct_enum_tests" purpose="testing_rank3_array" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="remove_duplicate_lattices_uq_hnf.out.{}" template="integer.xml"
		identifier="remove_duplicate_lattices_uq_hnf.out" />
	<target name="uq_hnf" compareto="remove_duplicate_lattices_uq_hnf.out"
		varfile="remove_duplicate_lattices_uq_hnf.out" when="each"/>
      </test>
      <global name="hnf" type="integer" modifiers="pointer" dimensions=":,:,:"/>
      <global name="degeneracy_list" type="integer" modifiers="pointer" dimensions=":"/>
      <global name="uq_hnf" type="integer" modifiers="pointer" dimensions=":,:,:"/>
      <global name="fixing_op" type="opList" modifiers="pointer" dimensions=":"/>
      <global name="d" type="real(dp)" modifiers="pointer" dimensions=":,:"/>
      <global name="RPList" type="RotPermList" modifiers="pointer" dimensions=":"/>
      <global name="latts" type="real(dp)" modifiers="pointer" dimensions=":,:,:"/>
      <assignment name="hnf" value="hnffile" allocate="true">
	<value identifier="hnffile" file="remove_duplicate_lattices_hnf.in.{}"
	       folder="../tests/derivative_structure_generator" rename="hnf.in"/>
      </assignment>
      <assignment name="LatDim" value="LatDimfile">
	<value identifier="LatDimfile" file="remove_duplicate_lattices_LatDim.in.{}"
	       folder="../tests/derivative_structure_generator" rename="LatDim.in"/>
      </assignment>
      <assignment name="parent_lattice" value="parent_latticefile" allocate="true">
	<value identifier="parent_latticefile"
	       file="remove_duplicate_lattices_parent_lattice.in.{}"
	       folder="../tests/derivative_structure_generator" rename="parent_lattice.in"/>
      </assignment>
      <assignment name="eps" value="epsfile">
	<value identifier="epsfile" file="remove_duplicate_lattices_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_sLV_fixing_operations">
    <group name="stuct_enum_tests" purpose="testing_rank3_array" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_sLV_fixing_operations_fixOp.out.{}" template="integer.xml"
		identifier="get_sLV_fixing_operations_fixOp.out" />
	<target name="fixOp" compareto="get_sLV_fixing_operations_fixOp.out"
		varfile="get_sLV_fixing_operations_fixOp.out" when="each"/>
      </test>
      <assignment name="HNF" value="HNFfile" allocate="true">
	<value identifier="HNFfile" file="get_sLV_fixing_operations_HNF.in.{}"
	       folder="../tests/derivative_structure_generator" rename="HNF.in"/>
      </assignment>
      <assignment name="pLV" value="pLVfile" allocate="true">
	<value identifier="pLVfile" file="get_sLV_fixing_operations_pLV.in.{}"
	       folder="../tests/derivative_structure_generator" rename="pLV.in"/>
      </assignment>
      <assignment name="nD" value="nDfile">
	<value identifier="nDfile" file="get_sLV_fixing_operations_nD.in.{}"
	       folder="../tests/derivative_structure_generator" rename="nD.in"/>
      </assignment>
      <assignment name="rot" value="rotfile" allocate="true">
	<value identifier="rotfile" file="get_sLV_fixing_operations_rot.in.{}"
	       folder="../tests/derivative_structure_generator" rename="rot.in"/>
      </assignment>
      <assignment name="shift" value="shiftfile" allocate="true">
	<value identifier="shiftfile" file="get_sLV_fixing_operations_shift.in.{}"
	       folder="../tests/derivative_structure_generator" rename="shift.in"/>
      </assignment>
      <assignment name="dPerm" value="dPermfile">
	<value identifier="dPermfile" file="get_sLV_fixing_operations_dPerm.in.{}"
	       folder="../tests/derivative_structure_generator" rename="dPerm.in"/>
      </assignment>
      <assignment name="eps" value="epsfile">
	<value identifier="epsfile" file="get_sLV_fixing_operations_eps.in.{}"
	       folder="../tests/derivative_structure_generator" rename="eps.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_all_2D_HNFs">
    <group name="stuct_enum_tests" purpose="testing_rank3_array" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_all_2d_HNFs_hnf.out.{}" template="integer.xml"
		identifier="get_all_2d_HNFs.out" />
	<target name="hnf" compareto="get_all_2d_HNFs.out"
		varfile="get_all_2d_HNFs.out" when="each"/>
      </test>
      <global name="hnf" type="integer" modifiers="pointer" dimensions=":,:,:"/>
      <assignment name="volume" value="volumefile">
	<value identifier="volumefile" file="get_all_2d_HNFs_volume.in.{}"
	       folder="../tests/derivative_structure_generator" rename="volume.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.get_HNF_2D_diagonals">
    <group name="stuct_enum_tests" purpose="testing" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic structures"
	    cases="[1-50]" timed="true">
	<output folder="../tests/derivative_structure_generator"
		file="get_HNF_diagonals_2D_diagonals.out{}" template="integer.xml"
		identifier="get_HNF_2D_diagonals.out" />
	<target name="diagonals" compareto="get_HNF_2D_diagonals.out"
		varfile="get_HNF_2D_diagonals.out" when="each"/>
      </test>
      <global name="diagonals" type="integer" modifiers="pointer" dimensions=":,:"/>
      <assignment name="detS" value="detSfile">
	<value identifier="detSfile" file="get_HNF_2D_diagonals_detS.in{}"
	       folder="../tests/derivative_structure_generator" rename="detS.in"/>
      </assignment>
    </group>
  </decorates>

  <decorates name="derivative_structure_generator.gen_multilattice_derivatives">
    <group name="stuct_enum_tests" purpose="testing" staging="../unittests/">
      <test identifier="original" description="Original enumerations tests of basic
					       structures. Used to test enum3 against enum4."
	    cases="001, 002, 003, 004, 005, 006" timed="true">
	<input folder="../tests/derivative_structure_generator" file="struct_enum.in.{}"
	       rename="struct_enum.in" />
	<output folder="../tests/derivative_structure_generator" file="struct_enum.out.{}"
		template="struct_enum.out.xml" identifier="struct_enum.out" />
	<target name="./struct_enum.out" compareto="struct_enum.out" />
      </test>
      <global name="dFull" type="real(dp)" modifiers="pointer" default="> null()" 
	      dimensions=":,:" />
      <global name="labelFull" type="integer" modifiers="pointer" 
	      dimensions=":,:" />
      <global name="digitFull" type="integer" modifiers="pointer" 
	      dimensions=":" />
      <global name="equivalencies" type="integer" modifiers="pointer" 
	      dimensions=":" />
      <global name="fname" type="character" kind="80" 
	      default=" 'struct_enum.in'" />
      <global name="cRange" type="integer" modifiers="pointer" 
	      dimensions=":,:" />
      <global name="LatDim" type="integer" />
      <global name="title" type="character" kind="80" />
      <prereq method="io_utils.read_input" 
	      paramlist="title,LatDim,parLV,nDFull,dFull,k,equivalencies,
			 nMin,nMax,eps,full,labelFull,digitFull,fname,
			 cRange,conc_check" />
      <assignment name="platTyp">
	<conditionals>
	  <if condition="LatDim==3" value="bulkconstant" />
	  <elseif condition="LatDim==2" value="surfconstant" />
	</conditionals>
	<value identifier="bulkconstant" constant="'b'" />
	<value identifier="surfconstant" constant="'s'" />
      </assignment>
    </group>
  </decorates>

</fortpy>
